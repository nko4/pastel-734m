extends layout

block content

  div#trailer

  a#play PLAY

  div#current
    svg(height="64", version="1.1", width="64", xmlns="http://www.w3.org/2000/svg",
        viewBox="0 0 64 64", class="arrow")
      g
        path(fill="none",stroke-width="5",stroke="#fff",d="M48.592939,9.792208C48.592939,9.792208,15.407061999999996,31.887987,15.407061999999996,31.887987C15.407061999999996,31.887987,48.592939,54.025974,48.592939,54.025974")
    span#name MEGA MAN
    svg(height="64", version="1.1", width="64", xmlns="http://www.w3.org/2000/svg",
        viewBox="0 0 64 64", class="arrow")
      g
        path(fill="none",stroke-width="5",stroke="#fff",d="M15.407061999999996,9.792208C15.407061999999996,9.792208,48.592939,31.887987,48.592939,31.887987C48.592939,31.887987,15.407061999999996,54.025974,15.407061999999996,54.025974")

block script
  script
    window.sweetnes = window.sweetnes || {}

    sweetnes.Game = function(name) {
      this.name = name;
      this.rom = name; // lowercase, replace space with underscore, append .rom
      this.trailer = name; // lowercase, replace space with underscore, append .mov
    }

    sweetnes.Game.prototype.urlSafeName = function() {
      return this.name.replace(/\./g, '').replace(/ /g, '_').toLowerCase();
    }

    sweetnes.Games = new Ring();

    ["Bubble Bobble", "Tetris", "Super Mario Bros. 3", "Contra"].forEach(function(name) {
      sweetnes.Games.push(new sweetnes.Game(name));
    });

    sweetnes.updateGameName = function() {
      var plate = document.getElementById("name");
      plate.innerHTML = sweetnes.Games.get().name;
    }

    sweetnes.updateGameName();

    var play = function() {
      window.location = "/play/" + sweetnes.Games.get().urlSafeName();
    }

    var playButton = document.getElementById("play");
    event.bind(playButton, "click", play);

    // Can just do this onLoad
    var arrows = document.getElementsByClassName("arrow");

    // Could make these bindings implicit by setting some data attribute
    // on actual elements instead. Totally better.
    mousetrap.bind("return", play);

    mousetrap.bind("left", function() {
      var arrow = arrows[0];

      arrow.setAttribute("class", "arrow");
      setTimeout(function() {
        arrow.setAttribute("class", "arrow shift left");
      }, 1);

      sweetnes.Games.prev();
      sweetnes.updateGameName();
    });

    mousetrap.bind("right", function() {
      var arrow = arrows[1];

      console.log("hmm");

      arrow.setAttribute("class", "arrow");
      setTimeout(function() {
        arrow.setAttribute("class", "arrow shift right");
      }, 1);

      sweetnes.Games.next();
      sweetnes.updateGameName();
    });
